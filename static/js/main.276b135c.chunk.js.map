{"version":3,"sources":["IncidentManager.js","index.js"],"names":["IncidentManager","props","dataSiteUrl","useState","companies","setCompanies","companyID","setCompanyID","group","setGroup","groupID","setGroupID","org","setOrg","serviceIDs","setServiceIDs","groups","setGroups","services","setServices","priorities","label","value","priorityIDs","setPriorityIDs","show24HrView","setShow24HrView","showAgeKpi","setShowAgeKpi","ageKpiBtnCss","setAgeKpiBtnCss","ageKpiArrowColor","setAgeKpiArrowColor","ageKpiOptionsCss","setAgeKpiOptionsCss","kpiDateField","setKpiDateField","GreenMaxAge","setGreenMaxAge","YellowMaxAge","setYellowMaxAge","RedMaxAge","setRedMaxAge","dateFields","rows","setRows","React","useEffect","console","log","getGroups","getServices","getRows","getCompanies","fetch","headers","Accept","then","response","json","x","data","myJson","onShowAgeKpiClick","class","onChange","val","options","filter","option","indexOf","split","getOptionLabel","getOptionValue","service","some","isMulti","priority","style","paddingTop","type","defaultChecked","for","onClick","color","event","stopPropagation","fontSize","tf","columns","name","title","defaultSorting","columnName","direction","defaultValue","showSortingControls","rootElement","document","getElementById","ReactDOM","render","href"],"mappings":"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","file":"static/js/main.276b135c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Select from \"react-select\";\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\nimport {\n  SortingState,\n  IntegratedSorting,\n  SearchState,\n  IntegratedFiltering\n} from \"@devexpress/dx-react-grid\";\nimport {\n  Grid,\n  Table,\n  Toolbar,\n  SearchPanel,\n  TableHeaderRow\n} from \"@devexpress/dx-react-grid-material-ui\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nexport default function IncidentManager(props) {\n  const dataSiteUrl = \"/csb-cqrdw/data/\";\n\n  const [companies, setCompanies] = useState([]);\n  const [companyID, setCompanyID] = useState(null);\n  const [group, setGroup] = useState(null);\n  const [groupID, setGroupID] = useState(null);\n  const [org, setOrg] = useState(null);\n  const [serviceIDs, setServiceIDs] = useState([]);\n  const [groups, setGroups] = useState([]);\n  const [services, setServices] = useState([]);\n  const priorities = [\n    { label: \"Low\", value: \"0\" },\n    { label: \"Medium\", value: \"1\" },\n    { label: \"High\", value: \"2\" }\n  ];\n  const [priorityIDs, setPriorityIDs] = useState([\n    { label: \"Low\", value: \"0\" },\n    { label: \"Medium\", value: \"1\" },\n    { label: \"High\", value: \"2\" }\n  ]);\n  const [show24HrView, setShow24HrView] = useState(false);\n  const [showAgeKpi, setShowAgeKpi] = useState(false);\n  const [ageKpiBtnCss, setAgeKpiBtnCss] = useState(\"disabled\");\n  const [ageKpiArrowColor, setAgeKpiArrowColor] = useState(\"disabled\");\n  const [ageKpiOptionsCss, setAgeKpiOptionsCss] = useState(\"disabled\");\n  const [kpiDateField, setKpiDateField] = useState(\"Submit_Date\");\n  const [GreenMaxAge, setGreenMaxAge] = useState(90);\n  const [YellowMaxAge, setYellowMaxAge] = useState(180);\n  const [RedMaxAge, setRedMaxAge] = useState(240);\n\n  const dateFields = [\n    { label: \"Submit Date\", value: \"Submit_Date\" },\n    { label: \"Last Modified\", value: \"Last_Modified_Date\" },\n    { label: \"Last Resolved\", value: \"Last_Resolved_Date\" },\n    { label: \"Reported Date\", value: \"Reported_Date\" },\n    { label: \"Responded Date\", value: \"Responded_Date\" },\n    { label: \"Closed Date\", value: \"Closed_Date\" },\n    { label: \"Event Date\", value: \"Event_Date\" },\n    { label: \"Required Resolution\", value: \"Required_Resolution_DateTime\" },\n    { label: \"Estimated Resolution\", value: \"Estimated_Resolution_Date\" },\n    { label: \"Acknowledgement Date\", value: \"Acknowledgment_Start_Date\" },\n    { label: \"Resolution Start Date\", value: \"Resolution_Start_Date\" },\n    { label: \"Last SLA Hold Date\", value: \"Last_SLA_Hold_Date\" },\n    { label: \"VIP Assignment Date\", value: \"VIPAssignmentDateTime\" },\n    { label: \"VIP Dispatch Date\", value: \"VIPDispatchDateTime\" }\n  ];\n\n  const columns = [\n    { name: \"ID\", title: \"ID\" },\n    { name: \"Name\", title: \"Name\" },\n    { name: \"Country\", title: \"Country\" },\n    { name: \"House\", title: \"House\" },\n    { name: \"Reign\", title: \"Reign\" }\n  ];\n\n  const [rows, setRows] = useState([]);\n\n  React.useEffect(() => {\n    console.log(companies);\n\n    if (companyID) {\n      getGroups();\n    }\n    if (groupID) {\n      getServices();\n    }\n\n    if (companyID) {\n      getRows();\n    }\n  }, [companyID, groupID, serviceIDs, priorityIDs]);\n\n  React.useEffect(() => {\n    getCompanies();\n  }, []);\n\n  const getCompanies = () => {\n    fetch(`${dataSiteUrl}companies.json`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    })\n      .then(function (response) {\n        return response.json();\n      })\n      .then(function (x) {\n        console.log(x);\n        setCompanies(x.data);\n      });\n  };\n\n  const getGroups = () => {\n    fetch(`${dataSiteUrl}groups.json?CompanyID=${companyID}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    })\n      .then(function (response) {\n        //console.log(response);\n        return response.json();\n      })\n      .then(function (myJson) {\n        //console.log(myJson);\n        setGroups(myJson);\n      });\n  };\n\n  const getRows = () => {\n    console.log(\"fetch\");\n    fetch(\n      `${dataSiteUrl}incidents.json?CompanyID=${companyID}&Org=${org}&GroupID=${groupID}&Priorities=${priorities}&Services=${services}`,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        }\n      }\n    )\n      .then(function (response) {\n        //console.log(response);\n        return response.json();\n      })\n      .then(function (myJson) {\n        //console.log(myJson);\n        setRows(myJson);\n      });\n  };\n\n  const getServices = () => {\n    fetch(\n      `${dataSiteUrl}services.json?CompanyID=${companyID}&Org=${org}&GroupID=${groupID}&Priorities=${priorities}`,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        }\n      }\n    )\n      .then(function (response) {\n        return response.json();\n      })\n      .then(function (myJson) {\n        setServices(myJson);\n      });\n  };\n\n  const onCompanyChange = (val) => {\n    setGroupID(null);\n    setServiceIDs([]);\n    setCompanyID(val.value);\n  };\n\n  const onGroupChange = (val) => {\n    setGroup(val);\n    if (val.indexOf(\"|\") !== -1) {\n      setOrg(val.split(\"|\")[0]);\n      setGroupID(val.split(\"|\")[1]);\n    }\n  };\n\n  const onShowAgeKpiChange = (val) => {\n    setShowAgeKpi(!showAgeKpi);\n    if (!showAgeKpi) {\n      setAgeKpiArrowColor(\"primary\");\n      setAgeKpiBtnCss(\"active\");\n    } else {\n      setAgeKpiArrowColor(\"disabled\");\n      setAgeKpiBtnCss(\"disabled\");\n      setAgeKpiOptionsCss(\"disabled\");\n    }\n  };\n\n  const onShowAgeKpiClick = () => {\n    if (showAgeKpi) {\n      setAgeKpiOptionsCss(\n        ageKpiOptionsCss === \"enabled\" ? \"disabled\" : \"enabled\"\n      );\n      setAgeKpiBtnCss(ageKpiOptionsCss === \"enabled\" ? \"active\" : \"selected\");\n    }\n  };\n\n  return (\n    <div>\n      <div class=\"filter-container\">\n        <form>\n          <label class=\"label-nowrap\">\n            Company:\n            <Select\n              onChange={onCompanyChange}\n              options={companies}\n              value={companies.filter(function (option) {\n                return option.value === companyID;\n              })}\n            ></Select>\n          </label>\n          <label>\n            Group:\n            <Select\n              value={groups.filter(function (option) {\n                return option.value === group;\n              })}\n              onChange={onGroupChange}\n              options={groups}\n              getOptionLabel={(x) => x.label}\n              getOptionValue={(x) => x.value}\n            ></Select>\n          </label>\n          <label>\n            Services:\n            <Select\n              value={services.filter(function (service) {\n                return serviceIDs.some((x) => service === x);\n              })}\n              onChange={(val) =>\n                setServiceIDs((serviceIDs) => {\n                  return val;\n                })\n              }\n              options={services}\n              isMulti\n            ></Select>\n          </label>\n\n          <label>\n            Priorities:\n            <Select\n              value={priorities.filter(function (priority) {\n                return priorityIDs.some((x) => priority.value === x.value);\n              })}\n              onChange={(val) =>\n                setPriorityIDs((priorityIDs) => {\n                  return val;\n                })\n              }\n              options={priorities}\n              class=\"form-check-input\"\n              isMulti\n            ></Select>\n          </label>\n          <div style={{ paddingTop: 10 }}>\n            <label>\n              <div class=\"form-check form-switch\">\n                <input\n                  class=\"form-check-input\"\n                  type=\"checkbox\"\n                  defaultChecked={show24HrView}\n                  onChange={() => setShow24HrView(!show24HrView)}\n                />\n                <label class=\"form-check-label\" for=\"flexSwitchCheckDefault\">\n                  Show 24hr view\n                </label>\n              </div>\n            </label>\n\n            <label>\n              <div class=\"form-check form-switch\">\n                <input\n                  class=\"form-check-input\"\n                  type=\"checkbox\"\n                  defaultChecked={showAgeKpi}\n                  onChange={onShowAgeKpiChange}\n                />\n                <label\n                  onClick={onShowAgeKpiClick}\n                  class={\"form-check-label age-kpi-btn-\" + ageKpiBtnCss}\n                  for=\"flexSwitchCheckDefault\"\n                >\n                  Show age indicators\n                  <ArrowDropDownIcon color={ageKpiArrowColor} />\n                  <div\n                    onClick={(event) => event.stopPropagation()}\n                    class={\"age-kpi-options-\" + ageKpiOptionsCss}\n                  >\n                    <span class=\"close-icon\" onClick={onShowAgeKpiClick}>\n                      <CloseIcon fontSize=\"small\" />\n                    </span>\n                    <div class=\"label-nowrap\">\n                      Age field:&nbsp;\n                      <label>\n                        <Select\n                          onChange={(val) => setKpiDateField(val.value)}\n                          options={dateFields}\n                          value={dateFields.filter(function (option) {\n                            return option.value === kpiDateField;\n                          })}\n                        ></Select>\n                      </label>\n                      <br />\n                      Green Max Age:&nbsp;\n                      <label>\n                        <input\n                          value={GreenMaxAge}\n                          onChange={(tf) => setGreenMaxAge(tf.value)}\n                          type=\"text\"\n                          class=\"form-control\"\n                        />\n                      </label>\n                      <br />\n                      Yellow Max Age:&nbsp;\n                      <label>\n                        <input\n                          value={YellowMaxAge}\n                          onChange={(tf) => setYellowMaxAge(tf.value)}\n                          type=\"text\"\n                          class=\"form-control\"\n                        />\n                      </label>\n                      <br />\n                      Red Max Age:&nbsp;\n                      <label>\n                        <input\n                          value={RedMaxAge}\n                          onChange={(tf) => setRedMaxAge(tf.value)}\n                          type=\"text\"\n                          class=\"form-control\"\n                        />\n                      </label>\n                    </div>\n                    <span class=\"footer\">* in minutes</span>\n                  </div>\n                </label>\n              </div>\n            </label>\n          </div>\n        </form>\n      </div>\n      <div class=\"grid\">\n        <Grid rows={rows} columns={columns}>\n          <SortingState\n            defaultSorting={[{ columnName: \"Name\", direction: \"asc\" }]}\n          />\n          <IntegratedSorting />\n          <SearchState defaultValue=\"\" />\n          <IntegratedFiltering />\n\n          <Table />\n          <TableHeaderRow showSortingControls />\n        </Grid>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport IncidentManager from \"./IncidentManager.js\";\nimport Select from \"react-select\";\n\nimport \"./styles.css\";\n\nconst rootElement = document.getElementById(\"root\");\n\nReactDOM.render(\n  <div>\n    <nav class=\"navbar navbar-default\">\n      <div class=\"container-fluid\">\n        <a class=\"navbar-brand\" href=\"#\">\n          Incident Manager\n        </a>\n      </div>\n    </nav>\n    <IncidentManager />\n  </div>,\n  rootElement\n);\n"],"sourceRoot":""}