{"version":3,"sources":["MyNavbar.js","loading.js","IncidentManager.js","NCRProjectTracker.js","index.js"],"names":["MyNavbar","props","location","useLocation","Navbar","bg","variant","Container","style","marginLeft","pathname","Brand","Nav","className","Link","as","to","Loading","CircularProgress","IncidentManager","dataSiteUrl","useState","companies","setCompanies","company","setCompany","group","setGroup","groupID","setGroupID","org","setOrg","serviceIDs","setServiceIDs","groups","setGroups","services","setServices","priorities","label","value","selectedPriorities","setSelectedPriorities","loading","setLoading","show4HrContainmentView","setShow4HrContainmentView","showAgeKpi","setShowAgeKpi","ageKpiBtnCss","setAgeKpiBtnCss","ageKpiArrowColor","setAgeKpiArrowColor","ageKpiOptionsCss","setAgeKpiOptionsCss","kpiDateField","setKpiDateField","greenMaxAge","setGreenMaxAge","yellowMaxAge","setYellowMaxAge","redMaxAge","setRedMaxAge","dateFields","name","title","columns","setColumns","rows","setRows","React","useEffect","getGroups","getIncidents","length","filter","x","getServices","getCompanies","addKpiColumn","getCellValue","getKpi","concat","forEach","column","data","_color","grey","Age_KPI","indexOf","green","yellow","red","_text","_age","parseInt","Age_In_Minutes","_greenMaxAge","_yellowMaxAge","_redMaxAge","ex","sx","color","getKpiParams","dateFormatter","epoch","moment","unix","local","format","DateTypeProvider","formatterComponent","fetch","headers","Accept","then","response","json","map","myJson","_services","onShowAgeKpiClick","class","onChange","val","options","option","obj","split","getOptionLabel","getOptionValue","service","some","isMulti","priority","paddingTop","type","checked","for","onClick","event","stopPropagation","fontSize","onInput","e","target","defaultCurrentPage","pageSize","defaultSorting","columnName","direction","defaultValue","noDataCellComponent","colSpan","NoDataCell","defaultHiddenColumnNames","showSortingControls","contentComponent","row","maxHeight","overflowY","marginBottom","marginTop","paddingBottom","Description","PriorityCode","Detailed_Decription","First_Name","Last_Name","Department","StatusCode","Assigned_Group","WorkLog","borderLeft","item","i","borderBottom","Work_Log_Submit_Date","Work_Log_Submitter","Detailed_Description","NCRProjectTracker","sites","setSites","site","setSite","getLink","_link","remedyItemUrl","Infrastructure_Change_ID","substring","lastIndexOf","href","getSites","_columns","Site_Group","bmc_Security_Classification","Change_Request_Status","DetailedDescription","ChangeCoordinatorGroup","Submitter","Approved","Created","Modified","rootElement","document","getElementById","createRoot","render","basename","path","element"],"mappings":"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","file":"static/js/main.3722ced6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n  Link,\r\n  useLocation\r\n} from \"react-router-dom\";\r\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\r\n\r\nexport default function MyNavbar(props) {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n      <Container style={{ marginLeft: 2 }}>\r\n        {(location.pathname === \"/\" ||\r\n          location.pathname === \"/IncidentManager\") && (\r\n          <Navbar.Brand>Incident Manager</Navbar.Brand>\r\n        )}\r\n        {location.pathname === \"/NCRProjectTracker\" && (\r\n          <Navbar.Brand>NCR Project Tracker</Navbar.Brand>\r\n        )}\r\n\r\n        <Nav className=\"me-auto\">\r\n          {(location.pathname === \"/\" ||\r\n            location.pathname === \"/IncidentManager\") && (\r\n            <Nav.Link as={Link} to=\"/NCRProjectTracker\">\r\n              NCR Project Tracker\r\n            </Nav.Link>\r\n          )}\r\n          {location.pathname === \"/NCRProjectTracker\" && (\r\n            <Nav.Link as={Link} to=\"/IncidentManager\">\r\n              Incident Manager\r\n            </Nav.Link>\r\n          )}\r\n        </Nav>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nexport const Loading = () => (\r\n  <div className=\"loading-shading-mui\">\r\n    <CircularProgress className=\"loading-icon-mui\" />\r\n  </div>\r\n);\r\n","import React, { useState } from \"react\";\nimport Select from \"react-select\";\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Circle from \"@mui/icons-material/Circle\";\nimport { grey, red, green, yellow } from \"@mui/material/colors\";\n\nimport {\n  SortingState,\n  IntegratedSorting,\n  SearchState,\n  IntegratedFiltering,\n  RowDetailState,\n  DataTypeProvider,\n  PagingState,\n  IntegratedPaging\n} from \"@devexpress/dx-react-grid\";\nimport {\n  Grid,\n  Table,\n  Toolbar,\n  SearchPanel,\n  TableHeaderRow,\n  TableRowDetail,\n  TableColumnVisibility,\n  PagingPanel\n} from \"@devexpress/dx-react-grid-material-ui\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport moment from \"moment\";\n\nimport { Loading } from \"./loading\";\n\nexport default function IncidentManager(props) {\n  const dataSiteUrl = \"data/\";\n\n  const [companies, setCompanies] = useState([]);\n  const [company, setCompany] = useState(null);\n  const [group, setGroup] = useState(null);\n  const [groupID, setGroupID] = useState(null);\n  const [org, setOrg] = useState(null);\n  const [serviceIDs, setServiceIDs] = useState([]);\n  const [groups, setGroups] = useState([]);\n  const [services, setServices] = useState([]);\n  const priorities = [\n    { label: \"Low\", value: \"3\" },\n    { label: \"Medium\", value: \"2\" },\n    { label: \"High\", value: \"1\" },\n    { label: \"Critical\", value: \"0\" }\n  ];\n  const [selectedPriorities, setSelectedPriorities] = useState([\n    { label: \"Low\", value: \"3\" },\n    { label: \"Medium\", value: \"2\" },\n    { label: \"High\", value: \"1\" },\n    { label: \"Critical\", value: \"0\" }\n  ]);\n  const [loading, setLoading] = useState(false);\n\n  const [show4HrContainmentView, setShow4HrContainmentView] = useState(false);\n  const [showAgeKpi, setShowAgeKpi] = useState(false);\n  const [ageKpiBtnCss, setAgeKpiBtnCss] = useState(\"disabled\");\n  const [ageKpiArrowColor, setAgeKpiArrowColor] = useState(\"disabled\");\n  const [ageKpiOptionsCss, setAgeKpiOptionsCss] = useState(\"disabled\");\n  const [kpiDateField, setKpiDateField] = useState(\"Submit_Date\");\n  const [greenMaxAge, setGreenMaxAge] = useState(90);\n  const [yellowMaxAge, setYellowMaxAge] = useState(180);\n  const [redMaxAge, setRedMaxAge] = useState(240);\n  const dropOffField = \"Required_Resolution_DateTime\";\n  const dateFields = [\n    { label: \"Submit Date\", value: \"Submit_Date\" },\n    { label: \"Last Modified\", value: \"Last_Modified_Date\" },\n    { label: \"Last Resolved\", value: \"Last_Resolved_Date\" },\n    { label: \"Reported Date\", value: \"Reported_Date\" },\n    { label: \"Responded Date\", value: \"Responded_Date\" },\n    { label: \"Closed Date\", value: \"Closed_Date\" },\n    { label: \"Event Date\", value: \"Event_Date\" },\n    { label: \"Required Resolution\", value: \"Required_Resolution_DateTime\" },\n    { label: \"Estimated Resolution\", value: \"Estimated_Resolution_Date\" },\n    { label: \"Acknowledgement Date\", value: \"Acknowledgment_Start_Date\" },\n    { label: \"Resolution Start Date\", value: \"Resolution_Start_Date\" },\n    { label: \"Last SLA Hold Date\", value: \"Last_SLA_Hold_Date\" },\n    { label: \"VIP Assignment Date\", value: \"VIPAssignmentDateTime\" },\n    { label: \"VIP Dispatch Date\", value: \"VIPDispatchDateTime\" }\n  ];\n\n  const [columns, setColumns] = useState([\n    { name: \"Age_In_Minutes\", title: \"Age_In_Minutes\" },\n    { name: \"Incident_Number\", title: \"Incident Number\" },\n    { name: \"PriorityCode\", title: \"Priority\" },\n    { name: \"Description\", title: \"Summary\" },\n    { name: \"Submit_Date\", title: \"Submitted\" },\n    { name: \"Last_Modified_Date\", title: \"Modified\" },\n    { name: \"Assigned_Company_Group\", title: \"Company/Group\" },\n    { name: \"Assignee\", title: \"Assignee\" },\n    { name: \"ServiceCI\", title: \"ServiceCI\" },\n    { name: \"StatusCode\", title: \"Status\" },\n    { name: \"LastLog\", title: \"Last Log Entry\" }\n  ]);\n\n  const [rows, setRows] = useState([]);\n\n  React.useEffect(() => {\n    if (company) {\n      getGroups();\n    }\n    if (company) {\n      getIncidents();\n    }\n\n    // check if 24 hr containment is still toggled\n    if (\n      selectedPriorities.length !== 2 ||\n      selectedPriorities.filter((x) => x.label === \"High\").length !== 1 ||\n      selectedPriorities.filter((x) => x.label === \"Critical\").length !== 1\n    ) {\n      setShow4HrContainmentView(false);\n    }\n  }, [company, groupID, serviceIDs, selectedPriorities]);\n\n  React.useEffect(() => {\n    getServices();\n  }, [company, groupID, selectedPriorities]);\n\n  React.useEffect(() => {\n    getCompanies();\n  }, []);\n\n  React.useEffect(() => {\n    addKpiColumn();\n    if (!showAgeKpi) {\n      setShow4HrContainmentView(false);\n    }\n  }, [showAgeKpi]);\n\n  React.useEffect(() => {\n    if (showAgeKpi) {\n      getIncidents();\n      //setShowAgeKpi(false);\n      //window.setTimeout(function () {\n      //  setShowAgeKpi(true);\n      //}, 1);\n    }\n  }, [greenMaxAge, yellowMaxAge, redMaxAge, kpiDateField]);\n\n  const noDataCell = (props) => {\n    return loading ? (\n      <td colSpan={props.colSpan} />\n    ) : (\n      <Table.NoDataCell {...props} />\n    );\n  };\n\n  const addKpiColumn = () => {\n    // remove\n    setColumns(columns.filter((x) => x.title !== \"Age\"));\n\n    if (showAgeKpi) {\n      // add column in grid\n      setColumns([{ getCellValue: getKpi, title: \"Age\" }].concat(columns)); // prepend to React State\n    } /*else setShow4HrContainmentView(false);*/\n  };\n\n  React.useEffect(() => {\n    if (\n      ageKpiOptionsCss === \"disabled\" &&\n      (kpiDateField !== \"Submit_Date\" ||\n        greenMaxAge !== 90 ||\n        yellowMaxAge !== 180 ||\n        redMaxAge !== 240)\n    ) {\n      setShow4HrContainmentView(false);\n    }\n\n    if (ageKpiOptionsCss === \"disabled\") {\n      //setShowAgeKpi(true);\n    }\n  }, [ageKpiOptionsCss]);\n\n  React.useEffect(() => {\n    if (show4HrContainmentView) {\n      setSelectedPriorities([\n        { label: \"High\", value: \"2\" },\n        { label: \"Critical\", value: \"3\" }\n      ]);\n      setKpiDateField(\"Event_Date\");\n      setGreenMaxAge(90);\n      setYellowMaxAge(180);\n      setRedMaxAge(240);\n      setShowAgeKpi(true);\n\n      columns\n        .filter((x) => x.title === \"Submitted\")\n        .forEach((column) => {\n          column.title = \"4-HR Start Date\";\n          column.name = kpiDateField;\n        });\n\n      // set service, company, group\n      setCompany(\"All\");\n      setGroup(\"All\");\n      setGroupID(\"All\");\n\n      //todo: highlight certain rows blue\n    } else {\n      columns\n        .filter((x) => x.title === \"4-HR Start Date\")\n        .forEach((column) => {\n          column.title = \"Submitted\";\n          column.name = \"Submit_Date\";\n        });\n    }\n  }, [show4HrContainmentView]);\n\n  const getKpi = (data) => {\n    let _color = grey[500];\n    if (data.Age_KPI.indexOf(\"green.gif\") !== -1) _color = green[500];\n    else if (data.Age_KPI.indexOf(\"yellow.gif\") !== -1) _color = yellow[500];\n    else if (data.Age_KPI.indexOf(\"red.gif\") !== -1) _color = red[500];\n\n    let _text = \"\";\n    let _age = 0;\n    try {\n      let _age = parseInt(data.Age_In_Minutes);\n      let _greenMaxAge = parseInt(greenMaxAge);\n      let _yellowMaxAge = parseInt(yellowMaxAge);\n      let _redMaxAge = parseInt(redMaxAge);\n\n      if (_age > _redMaxAge) {\n        _text = \"Exceeded!\";\n      } else if (_age > _yellowMaxAge) {\n        _text = \"-\" + (_redMaxAge - _age);\n      } else if (_age > _greenMaxAge) {\n        _text = \"-\" + (_yellowMaxAge - _age);\n      } else {\n        _text = \"-\" + (_greenMaxAge - _age);\n      }\n    } catch (ex) {}\n\n    return (\n      <div>\n        <Circle sx={{ color: _color }} /> {_text}\n      </div>\n    );\n  };\n\n  const getKpiParams = () => {\n    return `StartDateField%3D${kpiDateField};DropOffField%3D${dropOffField};GreenMaxAge%3D${greenMaxAge};YellowMaxAge%3D${yellowMaxAge};RedMaxAge%3D${redMaxAge}`;\n  };\n\n  const dateFormatter = (epoch) => {\n    return moment\n      .unix(epoch | epoch.value)\n      .local()\n      .format(\"MM/DD/YYYY\"); // 01/11/2021\n  };\n\n  const DateTypeProvider = (props) => (\n    <DataTypeProvider formatterComponent={dateFormatter} {...props} />\n  );\n\n  const getCompanies = () => {\n    fetch(`${dataSiteUrl}companies.json?opCode=GetCompanies`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    })\n      .then(function (response) {\n        return response.json();\n      })\n      .then(function (json) {\n        setCompanies([{ label: \"All\", value: \"All\" }].concat(json.data));\n      });\n  };\n\n  const getGroups = () => {\n    fetch(`${dataSiteUrl}groups.json?opCode=GetGroups&Company=${company}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    })\n      .then(function (response) {\n        return response.json();\n      })\n      .then(function (json) {\n        setGroups([{ label: \"All\", value: \"All|All\" }].concat(json.data));\n      });\n  };\n\n  const getServices = () => {\n    if (show4HrContainmentView) {\n      setServices([{ label: \"CyberSecurity\", value: \"CyberSecurity\" }]);\n      setServiceIDs([{ label: \"CyberSecurity\", value: \"CyberSecurity\" }]);\n    } else {\n      fetch(\n        `${dataSiteUrl}services.json?opCode=GetServices&Company=${company}&Org=${org}&GroupID=${groupID}&Priorities=${priorities.map(\n          (x) => x.value\n        )}&Filter=&KpiParams=${getKpiParams()}`,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Accept: \"application/json\"\n          }\n        }\n      )\n        .then(function (response) {\n          return response.json();\n        })\n        .then(function (myJson) {\n          setServices(myJson.data);\n        });\n    }\n  };\n\n  const getIncidents = () => {\n    setRows([]);\n    setLoading(true);\n\n    let _services = services.map((x) => x.value);\n    if (_services === \"\") {\n      _services = \"All\";\n    }\n\n    fetch(\n      `${dataSiteUrl}incidents.json?opCode=GetIncidents&Company=${company}&Org=${org}&GroupID=${groupID}&Priorities=${selectedPriorities.map(\n        (x) => x.value\n      )}&Services=${_services}&Filter=&KpiParams=${getKpiParams()}`,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        }\n      }\n    )\n      .then(function (response) {\n        return response.json();\n      })\n      .then(function (myJson) {\n        setRows(myJson.data);\n        setLoading(false);\n      });\n  };\n\n  const onCompanyChange = (val) => {\n    setGroupID(null);\n    setServiceIDs([]);\n    setCompany(val.value);\n  };\n\n  const onGroupChange = (obj) => {\n    setGroup(obj.value);\n    if (obj.value.indexOf(\"|\") !== -1) {\n      setOrg(obj.value.split(\"|\")[0]);\n      setGroupID(obj.value.split(\"|\")[1]);\n    }\n  };\n\n  const onShowAgeKpiChange = (val) => {\n    setShowAgeKpi(!showAgeKpi);\n    if (!showAgeKpi) {\n      setAgeKpiArrowColor(\"primary\");\n      setAgeKpiBtnCss(\"active\");\n    } else {\n      // Style dropdown\n      setAgeKpiArrowColor(\"disabled\");\n      setAgeKpiBtnCss(\"disabled\");\n      setAgeKpiOptionsCss(\"disabled\");\n    }\n  };\n\n  const onShowAgeKpiClick = () => {\n    if (showAgeKpi) {\n      setAgeKpiOptionsCss(\n        ageKpiOptionsCss === \"enabled\" ? \"disabled\" : \"enabled\"\n      );\n      setAgeKpiBtnCss(ageKpiOptionsCss === \"enabled\" ? \"active\" : \"selected\");\n    }\n\n    if (ageKpiOptionsCss === \"enabled\") {\n      getIncidents();\n    }\n  };\n\n  const RowDetail = ({ row }) => {\n    return (\n      <div className=\"row\">\n        <div\n          className=\"col-7\"\n          style={{\n            maxHeight: 300,\n            overflowY: \"auto\",\n            marginBottom: -15,\n            marginTop: -15,\n            paddingTop: 11,\n            paddingBottom: 11\n          }}\n        >\n          <div class=\"detail-field\">\n            <strong>Summary:</strong>\n            <br />\n            {row.Description}\n          </div>\n          <div class=\"detail-field\">\n            <strong>Priority:</strong>\n            <br />\n            {row.PriorityCode}\n          </div>\n          <div class=\"detail-field\">\n            <strong>Notes:</strong>\n            <br />\n            {row.Detailed_Decription}\n          </div>\n          <div class=\"detail-field\">\n            <strong>Customer/Office:</strong>\n            <br />\n            {row.First_Name} {row.Last_Name} / {row.Department}\n          </div>\n          <div class=\"detail-field\">\n            <strong>Status:</strong>\n            <br />\n            {row.StatusCode}\n          </div>\n          <div class=\"detail-field\">\n            <strong>Assigned Group:</strong>\n            <br />\n            {row.Assigned_Group}\n          </div>\n        </div>\n        {row.WorkLog && (\n          <div\n            className=\"col-5\"\n            style={{\n              maxHeight: 300,\n              overflowY: \"auto\",\n              borderLeft: \"1px solid #ced4da\",\n              marginBottom: -15,\n              marginTop: -15,\n              paddingTop: 11,\n              paddingBottom: 11\n            }}\n          >\n            <div>\n              {row.WorkLog?.map(function (item, i) {\n                return (\n                  <div\n                    className=\"detail-field\"\n                    style={{\n                      borderBottom: \"1px solid #ced4da\"\n                    }}\n                  >\n                    <div class=\"worklog-header\">\n                      <strong>\n                        {dateFormatter(item.Work_Log_Submit_Date)}\n                      </strong>{\" \"}\n                      {item.Work_Log_Submitter}\n                    </div>\n                    <div class=\"worklog-body\">{item.Detailed_Description}</div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <div class=\"filter-container\">\n        <form>\n          <label class=\"label-nowrap\">\n            Company:\n            <Select\n              className=\"companySel\"\n              onChange={onCompanyChange}\n              options={companies}\n              value={companies.filter(function (option) {\n                return option.value === company;\n              })}\n            ></Select>\n          </label>\n          <label>\n            Group:\n            <Select\n              className=\"groupSel\"\n              value={groups.filter(function (option) {\n                return option.value === group;\n              })}\n              onChange={onGroupChange}\n              options={groups}\n              getOptionLabel={(x) => x.label}\n              getOptionValue={(x) => x.value}\n            ></Select>\n          </label>\n          <label>\n            Services:\n            <Select\n              className=\"servicesSel\"\n              value={services.filter(function (service) {\n                return serviceIDs.some((x) => service.value === x.value);\n              })}\n              onChange={(val) => {\n                setShow4HrContainmentView(false);\n                setServiceIDs((serviceIDs) => {\n                  return val;\n                });\n              }}\n              options={services}\n              isMulti\n            ></Select>\n          </label>\n\n          <label>\n            Priorities:\n            <Select\n              value={priorities.filter(function (priority) {\n                return selectedPriorities.some(\n                  (x) => priority.value === x.value\n                );\n              })}\n              onChange={(val) => {\n                setSelectedPriorities((selectedPriorities) => {\n                  return val;\n                });\n              }}\n              options={priorities}\n              class=\"form-check-input\"\n              isMulti\n            ></Select>\n          </label>\n          <div style={{ paddingTop: 10 }}>\n            <label>\n              <div class=\"form-check form-switch\">\n                <input\n                  class=\"form-check-input\"\n                  type=\"checkbox\"\n                  checked={show4HrContainmentView}\n                  onChange={() =>\n                    setShow4HrContainmentView(!show4HrContainmentView)\n                  }\n                />\n                <label class=\"form-check-label\" for=\"flexSwitchCheckDefault\">\n                  Show 4HR-Containment View\n                </label>\n              </div>\n            </label>\n\n            <label>\n              <div class=\"form-check form-switch\">\n                <input\n                  class=\"form-check-input\"\n                  type=\"checkbox\"\n                  checked={showAgeKpi}\n                  onChange={onShowAgeKpiChange}\n                />\n                <label\n                  onClick={onShowAgeKpiClick}\n                  class={\"form-check-label age-kpi-btn-\" + ageKpiBtnCss}\n                  for=\"flexSwitchCheckDefault\"\n                >\n                  Show age indicators\n                  <ArrowDropDownIcon color={ageKpiArrowColor} />\n                  <div\n                    onClick={(event) => event.stopPropagation()}\n                    class={\"age-kpi-options-\" + ageKpiOptionsCss}\n                  >\n                    <span class=\"close-icon\" onClick={onShowAgeKpiClick}>\n                      <CloseIcon fontSize=\"small\" />\n                    </span>\n                    <div class=\"label-nowrap\">\n                      Age field:&nbsp;\n                      <label>\n                        <Select\n                          onChange={(val) => setKpiDateField(val.value)}\n                          options={dateFields}\n                          value={dateFields.filter(function (option) {\n                            return option.value === kpiDateField;\n                          })}\n                        ></Select>\n                      </label>\n                      <br />\n                      Green Max Age:&nbsp;\n                      <label>\n                        <input\n                          value={greenMaxAge}\n                          onInput={(e) => setGreenMaxAge(e.target.value)}\n                          type=\"text\"\n                          class=\"form-control\"\n                        />\n                      </label>\n                      <br />\n                      Yellow Max Age:&nbsp;\n                      <label>\n                        <input\n                          value={yellowMaxAge}\n                          onInput={(e) => setYellowMaxAge(e.target.value)}\n                          type=\"text\"\n                          class=\"form-control\"\n                        />\n                      </label>\n                      <br />\n                      Red Max Age:&nbsp;\n                      <label>\n                        <input\n                          value={redMaxAge}\n                          onInput={(e) => setRedMaxAge(e.target.value)}\n                          type=\"text\"\n                          class=\"form-control\"\n                        />\n                      </label>\n                    </div>\n                    <span class=\"footer\">* in minutes</span>\n                  </div>\n                </label>\n              </div>\n            </label>\n          </div>\n        </form>\n      </div>\n      <div class=\"grid\">\n        <Grid rows={rows} columns={columns}>\n          <PagingState defaultCurrentPage={0} pageSize={20} />\n          <IntegratedPaging />\n          <SortingState\n            defaultSorting={[{ columnName: \"Name\", direction: \"asc\" }]}\n          />\n          <IntegratedSorting />\n          <RowDetailState />\n          <SearchState defaultValue=\"\" />\n          <IntegratedFiltering />\n          <DateTypeProvider for={dateFields.map((x) => x.value)} />\n          <Table noDataCellComponent={noDataCell} />\n          <TableColumnVisibility\n            defaultHiddenColumnNames={[\"Age_In_Minutes\"]}\n          />\n          <TableHeaderRow showSortingControls />\n          <PagingPanel />\n          <TableRowDetail contentComponent={RowDetail} />\n        </Grid>\n        {loading && <Loading />}\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\r\nimport Select from \"react-select\";\r\n\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  SearchState,\r\n  RowDetailState,\r\n  IntegratedFiltering,\r\n  DataTypeProvider,\r\n  PagingState,\r\n  IntegratedPaging\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  Toolbar,\r\n  SearchPanel,\r\n  TableHeaderRow,\r\n  TableRowDetail,\r\n  TableColumnVisibility,\r\n  PagingPanel\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport moment from \"moment\";\r\nimport { Loading } from \"./loading\";\r\n\r\nexport default function NCRProjectTracker(props) {\r\n  const dataSiteUrl = \"data/\";\r\n  const remedyItemUrl = \"[RemedyItemUrl]\";\r\n  const companies = [\r\n    { label: \"All\", value: \"All\" },\r\n    { label: \"NCR\", value: \"NCR\" },\r\n    { label: \"Crystal City\", value: \"Crystal City\" }\r\n  ];\r\n  const [company, setCompany] = useState(\"All\");\r\n  const [sites, setSites] = useState([]);\r\n  const [site, setSite] = useState(\"All\");\r\n\r\n  const [columns, setColumns] = useState([\r\n    { name: \"Site\", title: \"Location\" },\r\n    { name: \"Infrastructure_Change_ID\", title: \"Change ID\" },\r\n    { name: \"Description\", title: \"Summary\" },\r\n    { name: \"Approved\", title: \"Approved\" },\r\n    { name: \"ASCHG\", title: \"Assignee\" },\r\n    { name: \"Change_Request_Status\", title: \"Remedy Status\" },\r\n    { name: \"Current_Update\", title: \"Current Update\" },\r\n    { name: \"Submit_Date\", title: \"Submitted\" },\r\n    { name: \"Last_Modified_By\", title: \"Modified By\" },\r\n    { name: \"Last_Modified_Date\", title: \"Modified On\" }\r\n  ]);\r\n  const dateFields = [\r\n    { label: \"Submit Date\", value: \"Submit_Date\" },\r\n    { label: \"Last Modified Date\", value: \"Last_Modified_Date\" }\r\n  ];\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [rows, setRows] = useState([]);\r\n\r\n  const noDataCell = (props) => {\r\n    return loading ? (\r\n      <td colSpan={props.colSpan} />\r\n    ) : (\r\n      <Table.NoDataCell {...props} />\r\n    );\r\n  };\r\n\r\n  const getLink = (data) => {\r\n    let _filter = data.Infrastructure_Change_ID.substring(\r\n      data.Infrastructure_Change_ID.lastIndexOf(\"0\") + 1,\r\n      data.Infrastructure_Change_ID.length\r\n    );\r\n    let _link =\r\n      remedyItemUrl +\r\n      \"/?mode=search&amp;F304255500=CHG%3AInfrastructure%20Change&amp;F1000000076=FormOpenNoAppList&amp;F303647600=SearchTicketWithQual&amp;F304255610='Infrastructure%20Change%20ID'LIKE%22%25\" +\r\n      _filter +\r\n      \"%22\";\r\n    return (\r\n      <a href={_link} target=\"_blank\">\r\n        {data.Infrastructure_Change_ID}\r\n      </a>\r\n    );\r\n  };\r\n\r\n  const dateFormatter = (epoch) => {\r\n    return moment\r\n      .unix(epoch | epoch.value)\r\n      .local()\r\n      .format(\"MM/DD/YYYY\"); // 01/11/2021\r\n  };\r\n\r\n  const DateTypeProvider = (props) => (\r\n    <DataTypeProvider formatterComponent={dateFormatter} {...props} />\r\n  );\r\n\r\n  const getSites = () => {\r\n    fetch(`${dataSiteUrl}sites.json?opCode=GetNCRSites&Company=${company}`, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\"\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        return response.json();\r\n      })\r\n      .then(function (json) {\r\n        setSites([{ label: \"All\", value: \"All\" }].concat(json.data));\r\n      });\r\n  };\r\n\r\n  const getRows = () => {\r\n    setRows([]);\r\n    setLoading(true);\r\n\r\n    fetch(\r\n      `${dataSiteUrl}NCRItems.json?opCode=GetNCRItems&Company=${company}&Site=${site}`,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\"\r\n        }\r\n      }\r\n    )\r\n      .then(function (response) {\r\n        return response.json();\r\n      })\r\n      .then(function (json) {\r\n        setRows(json.data);\r\n        let _columns = columns;\r\n        _columns[1].getCellValue = getLink;\r\n        setColumns(_columns);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const onCompanyChange = (val) => {\r\n    setSite(\"All\");\r\n    getSites();\r\n    setCompany(val.value);\r\n  };\r\n\r\n  const onSiteChange = (val) => {\r\n    setSite(val.value);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    getSites();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    getRows();\r\n  }, [company, site]);\r\n\r\n  const RowDetail = ({ row }) => {\r\n    return (\r\n      <div className=\"row\">\r\n        <div\r\n          className=\"col-7\"\r\n          style={{\r\n            maxHeight: 300,\r\n            overflowY: \"auto\",\r\n            marginBottom: -15,\r\n            marginTop: -15,\r\n            paddingTop: 11,\r\n            paddingBottom: 11\r\n          }}\r\n        >\r\n          <div class=\"detail-field\">\r\n            <strong>Change Location:</strong>\r\n            <br />\r\n            {row.Site_Group}\r\n          </div>\r\n          <div class=\"detail-field\">\r\n            <strong>Security Classification:</strong>\r\n            <br />\r\n            {row.bmc_Security_Classification}\r\n          </div>\r\n          <div class=\"detail-field\">\r\n            <strong>Status:</strong>\r\n            <br />\r\n            {row.Change_Request_Status}\r\n          </div>\r\n          <div class=\"detail-field\">\r\n            <strong>Summary:</strong>\r\n            <br />\r\n            {row.Description}\r\n          </div>\r\n          <div class=\"detail-field\">\r\n            <strong>Notes:</strong>\r\n            <br />\r\n            {row.DetailedDescription}\r\n          </div>\r\n          <div class=\"detail-field\">\r\n            <strong>Change Coordinator / Change Group:</strong>\r\n            <br />\r\n            {row.ChangeCoordinatorGroup}\r\n          </div>\r\n          <div class=\"detail-field\">\r\n            <strong>Submitter / Office:</strong>\r\n            <br />\r\n            {row.Submitter}\r\n          </div>\r\n          <div class=\"detail-field\">\r\n            <strong>Approved:</strong>\r\n            <br />\r\n            {row.Approved}\r\n          </div>\r\n          <div class=\"detail-field\">\r\n            <strong>Created:</strong>\r\n            <br />\r\n            {row.Created}\r\n          </div>\r\n          <div class=\"detail-field\">\r\n            <strong>Modified:</strong>\r\n            <br />\r\n            {row.Modified}\r\n          </div>\r\n        </div>\r\n        {row.WorkLog && (\r\n          <div\r\n            className=\"col-5\"\r\n            style={{\r\n              maxHeight: 300,\r\n              overflowY: \"auto\",\r\n              borderLeft: \"1px solid #ced4da\",\r\n              marginBottom: -15,\r\n              marginTop: -15,\r\n              paddingTop: 11,\r\n              paddingBottom: 11\r\n            }}\r\n          >\r\n            <div>\r\n              {row.WorkLog?.map(function (item, i) {\r\n                return (\r\n                  <div\r\n                    className=\"detail-field\"\r\n                    style={{\r\n                      borderBottom: \"1px solid #ced4da\"\r\n                    }}\r\n                  >\r\n                    <div class=\"worklog-header\">\r\n                      <strong>\r\n                        {dateFormatter(item.Work_Log_Submit_Date)}\r\n                      </strong>{\" \"}\r\n                      {item.Work_Log_Submitter}\r\n                    </div>\r\n                    <div class=\"worklog-body\">{item.Detailed_Description}</div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div class=\"filter-container\">\r\n        <form>\r\n          <label class=\"label-nowrap\">\r\n            Company:\r\n            <Select\r\n              className=\"companySel\"\r\n              onChange={onCompanyChange}\r\n              options={companies}\r\n              value={companies.filter(function (option) {\r\n                return option.value === company;\r\n              })}\r\n            ></Select>\r\n          </label>\r\n          <label>\r\n            Site:\r\n            <Select\r\n              className=\"sitesel\"\r\n              value={sites.filter(function (option) {\r\n                return option.value === site;\r\n              })}\r\n              onChange={onSiteChange}\r\n              options={sites}\r\n              getOptionLabel={(x) => x.label}\r\n              getOptionValue={(x) => x.value}\r\n            ></Select>\r\n          </label>\r\n        </form>\r\n      </div>\r\n      <div class=\"grid\">\r\n        <Grid rows={rows} columns={columns}>\r\n          <PagingState defaultCurrentPage={0} pageSize={20} />\r\n          <IntegratedPaging />\r\n          <SortingState\r\n            defaultSorting={[{ columnName: \"Name\", direction: \"asc\" }]}\r\n          />\r\n          <IntegratedSorting />\r\n          <RowDetailState />\r\n          <SearchState defaultValue=\"\" />\r\n          <IntegratedFiltering />\r\n          <DateTypeProvider for={dateFields.map((x) => x.value)} />\r\n          <Table noDataCellComponent={noDataCell} />\r\n          <TableColumnVisibility defaultHiddenColumnNames={[]} />\r\n          <TableHeaderRow showSortingControls />\r\n          <PagingPanel />\r\n          <TableRowDetail contentComponent={RowDetail} />\r\n        </Grid>\r\n        {loading && <Loading />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport MyNavbar from \"./MyNavbar.js\";\nimport IncidentManager from \"./IncidentManager.js\";\nimport NCRProjectTracker from \"./NCRProjectTracker.js\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./styles.css\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <div>\n    <Router basename=\"/\">\n      <MyNavbar />\n      <Routes>\n        <Route path=\"/\" element={<IncidentManager />} />\n        <Route path=\"/IncidentManager\" element={<IncidentManager />} />\n        <Route path=\"/NCRProjectTracker\" element={<NCRProjectTracker />} />\n      </Routes>\n    </Router>\n  </div>\n);\n"],"sourceRoot":""}