{"version":3,"sources":["MyNavbar.js","loading.js","IncidentItem.tsx","IncidentManager.js","NCRItem.tsx","NCRProjectTracker.js","index.js"],"names":["MyNavbar","props","location","useLocation","Navbar","bg","variant","Container","style","marginLeft","Brand","Nav","className","Link","as","to","pathname","toLowerCase","indexOf","Loading","CircularProgress","IncidentItem","useState","loading","setLoading","row","setRow","useEffect","console","log","fetch","incidentNumber","headers","Accept","then","response","json","myJson","data","maxWidth","maxHeight","overflowY","marginBottom","marginTop","paddingTop","paddingBottom","Description","PriorityCode","Detailed_Decription","First_Name","Last_Name","Department","StatusCode","Assigned_Group","WorkLog","borderLeft","padding","map","item","i","borderBottom","epoch","parseInt","Work_Log_Submit_Date","moment","unix","local","format","Work_Log_Submitter","Detailed_Description","IncidentManager","addToast","useToasts","dataSiteUrl","companies","setCompanies","company","setCompany","group","setGroup","groupID","setGroupID","org","setOrg","serviceIDs","setServiceIDs","groups","setGroups","services","setServices","priorities","label","value","selectedPriorities","setSelectedPriorities","myInterval","setMyInterval","show4HrContainmentView","setShow4HrContainmentView","showAgeKpi","setShowAgeKpi","ageKpiBtnCss","setAgeKpiBtnCss","ageKpiArrowColor","setAgeKpiArrowColor","ageKpiOptionsCss","setAgeKpiOptionsCss","kpiDateField","setKpiDateField","greenMaxAge","setGreenMaxAge","yellowMaxAge","setYellowMaxAge","redMaxAge","setRedMaxAge","isAutoRefresh","setIsAutoRefresh","dateFields","name","title","getCellValue","_indicator","_event_date","Event_Date","diff","sx","color","height","ex","Incident_Number","columns","setColumns","columnName","width","defaultColumnWidths","setDefaultColumnWidths","currentPage","setCurrentPage","totalCount","setTotalCount","rows","setRows","lastUpdated","setLastUpdated","React","_defaultColumnWidths","_","cloneDeep","push","getGroups","getIncidents","getServices","getView","getCompanies","setInterval","clearInterval","addKpiColumn","filter","x","forEach","column","localStorage","getItem","JSON","parse","getKpi","concat","_color","grey","Age_KPI","green","yellow","red","_text","_age","Age_In_Minutes","_greenMaxAge","_yellowMaxAge","_redMaxAge","getKpiParams","dateFormatter","DateTypeProvider","formatterComponent","_services","_priorities","_show4HrContainmentView","onShowAgeKpiClick","class","onChange","val","options","option","obj","split","getOptionLabel","getOptionValue","service","some","isMulti","priority","type","checked","e","target","for","onClick","event","stopPropagation","fontSize","onInput","paddingRight","setItem","stringify","appearance","autoDismiss","autoDismissTimeout","header","onCurrentPageChange","pageSize","defaultSorting","direction","defaultValue","noDataCellComponent","colSpan","NoDataCell","columnExtensions","wordWrapEnabled","rowComponent","restProps","Row","backgroundColor","Assignee","defaultHiddenColumnNames","resizingMode","showSortingControls","contentComponent","NCRItem","infrastructureChangeID","Site_Group","bmc_Security_Classification","Change_Request_Status","ChangeCoordinatorGroup","Submitter","Approved","Created","Modified","NCRProjectTracker","sites","setSites","site","setSite","getLink","_link","remedyItemUrl","Infrastructure_Change_ID","substring","lastIndexOf","length","href","getSites","_columns","rootElement","document","getElementById","createRoot","render","basename","path","element"],"mappings":"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","file":"static/js/main.2fcc3426.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n  Link,\r\n  useLocation\r\n} from \"react-router-dom\";\r\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\r\n\r\nexport default function MyNavbar(props) {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n      <Container style={{ marginLeft: 2 }}>\r\n        <Navbar.Brand>SOF Remedy Integration</Navbar.Brand>\r\n\r\n        <Nav className=\"me-auto\">\r\n          <Nav.Link\r\n            as={Link}\r\n            to=\"/IncidentManager\"\r\n            className={\r\n              location.pathname.toLowerCase().indexOf(\"/ncrprojecttracker\") ==\r\n              -1\r\n                ? \"active\"\r\n                : \"\"\r\n            }\r\n          >\r\n            Incident Manager\r\n          </Nav.Link>\r\n\r\n          <Nav.Link\r\n            as={Link}\r\n            to=\"/NCRProjectTracker\"\r\n            className={\r\n              location.pathname.toLowerCase().indexOf(\"/ncrprojecttracker\") !=\r\n              -1\r\n                ? \"active\"\r\n                : \"\"\r\n            }\r\n          >\r\n            NCR Project Tracker\r\n          </Nav.Link>\r\n        </Nav>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nexport const Loading = () => (\r\n  <div className=\"loading-shading-mui\">\r\n    <CircularProgress className=\"loading-icon-mui\" />\r\n  </div>\r\n);\r\n","import * as React from \"react\";\r\nimport { FunctionComponent, useEffect, useState } from \"react\";\r\nimport { Loading } from \"./loading\";\r\nimport moment from \"moment\";\r\n\r\ninterface IncidentItemProps {\r\n  incidentNumber: string;\r\n}\r\n\r\nexport interface WorkLogDto {\r\n  Work_Log_Submit_Date?: string | null;\r\n  Work_Log_Submitter?: string | null;\r\n  Detailed_Description?: string | null;\r\n}\r\n\r\nexport interface IncidentItemDto {\r\n  Description?: string | null;\r\n  PriorityCode?: string | null;\r\n  Detailed_Decription?: string | null;\r\n  First_Name?: string | null;\r\n  Last_Name?: string | null;\r\n  Department?: string | null;\r\n  StatusCode?: string | null;\r\n  Assigned_Group?: string | null;\r\n  WorkLog?: WorkLogDto[] | null;\r\n}\r\n\r\nconst IncidentItem: FunctionComponent<IncidentItemProps> = (props) => {\r\n  const dataSiteUrl = \"data/\";\r\n  const [loading, setLoading] = useState(false);\r\n  const [row, setRow] = useState<IncidentItemDto>({});\r\n\r\n  const dateFormatter = (epoch: number) => {\r\n    return moment.unix(epoch).local().format(\"MM/DD/YYYY\"); // 01/11/2021\r\n  };\r\n\r\n  const getIncident = () => {\r\n    console.log(\"getIncidents\");\r\n    setRow({});\r\n    setLoading(true);\r\n\r\n    fetch(\r\n      `${dataSiteUrl}incident.json?opCode=GetIncident&IncidentNumber=${props.incidentNumber}`,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\"\r\n        }\r\n      }\r\n    )\r\n      .then(function (response) {\r\n        return response.json();\r\n      })\r\n      .then(function (myJson) {\r\n        setRow(myJson.data);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getIncident();\r\n  }, [props.incidentNumber]);\r\n\r\n  return (\r\n    <div className=\"row\" style={{ maxWidth: \"calc(100vw)\" }}>\r\n      <div\r\n        className=\"col-6\"\r\n        style={{\r\n          maxHeight: 300,\r\n          overflowY: \"auto\",\r\n          marginBottom: -15,\r\n          marginTop: -15,\r\n          paddingTop: 11,\r\n          paddingBottom: 11\r\n        }}\r\n      >\r\n        <div className=\"detail-field\">\r\n          <strong>Summary:</strong>\r\n          <br />\r\n          {row.Description}\r\n        </div>\r\n        <div className=\"detail-field\">\r\n          <strong>Priority:</strong>\r\n          <br />\r\n          {row.PriorityCode}\r\n        </div>\r\n        <div className=\"detail-field\">\r\n          <strong>Notes:</strong>\r\n          <br />\r\n          {row.Detailed_Decription}\r\n        </div>\r\n        <div className=\"detail-field\">\r\n          <strong>Customer/Office:</strong>\r\n          <br />\r\n          {row.First_Name} {row.Last_Name} / {row.Department}\r\n        </div>\r\n        <div className=\"detail-field\">\r\n          <strong>Status:</strong>\r\n          <br />\r\n          {row.StatusCode}\r\n        </div>\r\n        <div className=\"detail-field\">\r\n          <strong>Assigned Group:</strong>\r\n          <br />\r\n          {row.Assigned_Group}\r\n        </div>\r\n      </div>\r\n      {row.WorkLog && (\r\n        <div\r\n          className=\"col-6\"\r\n          style={{\r\n            maxHeight: 300,\r\n            overflowY: \"auto\",\r\n            borderLeft: \"1px solid #ced4da\",\r\n            marginBottom: -15,\r\n            marginTop: -15,\r\n            paddingTop: 11,\r\n            paddingBottom: 11\r\n          }}\r\n        >\r\n          <div style={{ padding: 3 }}>\r\n            <b>LOG:</b>\r\n          </div>\r\n          <div>\r\n            {row.WorkLog?.map(function (item, i) {\r\n              return (\r\n                <div\r\n                  className=\"detail-field\"\r\n                  style={{\r\n                    borderBottom: \"1px solid #ced4da\"\r\n                  }}\r\n                >\r\n                  <div className=\"worklog-header\">\r\n                    <strong>\r\n                      {dateFormatter(\r\n                        parseInt(item.Work_Log_Submit_Date || \"0\")\r\n                      )}\r\n                    </strong>{\" \"}\r\n                    {item.Work_Log_Submitter}\r\n                  </div>\r\n                  <div className=\"worklog-body\">\r\n                    {item.Detailed_Description}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n      {loading && <Loading />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IncidentItem;\r\n","import React, { useState } from \"react\";\nimport Select from \"react-select\";\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Circle from \"@mui/icons-material/Circle\";\nimport Square from \"@mui/icons-material/Square\";\nimport { grey, red, green, yellow } from \"@mui/material/colors\";\nimport IncidentItem from \"./IncidentItem.tsx\";\nimport _ from \"lodash\";\nimport {\n  SortingState,\n  IntegratedSorting,\n  SearchState,\n  IntegratedFiltering,\n  RowDetailState,\n  DataTypeProvider,\n  PagingState,\n  CustomPaging,\n  IntegratedPaging\n} from \"@devexpress/dx-react-grid\";\nimport {\n  Grid,\n  Table,\n  Toolbar,\n  SearchPanel,\n  TableHeaderRow,\n  TableRowDetail,\n  TableColumnVisibility,\n  TableColumnResizing,\n  PagingPanel,\n  Template,\n  TemplatePlaceholder\n} from \"@devexpress/dx-react-grid-material-ui\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport moment from \"moment\";\nimport { Loading } from \"./loading\";\nimport { useToasts } from \"react-toast-notifications\";\n\nexport default function IncidentManager(props) {\n  const { addToast } = useToasts();\n\n  const dataSiteUrl = \"data/\";\n\n  const [companies, setCompanies] = useState([]);\n  const [company, setCompany] = useState(null);\n  const [group, setGroup] = useState(null);\n  const [groupID, setGroupID] = useState(null);\n  const [org, setOrg] = useState(null);\n  const [serviceIDs, setServiceIDs] = useState([]);\n  const [groups, setGroups] = useState([]);\n  const [services, setServices] = useState([]);\n  const priorities = [\n    { label: \"Low\", value: \"3\" },\n    { label: \"Medium\", value: \"2\" },\n    { label: \"High\", value: \"1\" },\n    { label: \"Critical\", value: \"0\" }\n  ];\n  const [selectedPriorities, setSelectedPriorities] = useState([\n    { label: \"Low\", value: \"3\" },\n    { label: \"Medium\", value: \"2\" },\n    { label: \"High\", value: \"1\" },\n    { label: \"Critical\", value: \"0\" }\n  ]);\n  const [loading, setLoading] = useState(false);\n  const [myInterval, setMyInterval] = useState(null);\n  const [show4HrContainmentView, setShow4HrContainmentView] = useState(false);\n  const [showAgeKpi, setShowAgeKpi] = useState(false);\n  const [ageKpiBtnCss, setAgeKpiBtnCss] = useState(\"disabled\");\n  const [ageKpiArrowColor, setAgeKpiArrowColor] = useState(\"disabled\");\n  const [ageKpiOptionsCss, setAgeKpiOptionsCss] = useState(\"disabled\");\n  const [kpiDateField, setKpiDateField] = useState(\"Submit_Date\");\n  const [greenMaxAge, setGreenMaxAge] = useState(90);\n  const [yellowMaxAge, setYellowMaxAge] = useState(180);\n  const [redMaxAge, setRedMaxAge] = useState(240);\n  const [isAutoRefresh, setIsAutoRefresh] = useState(true);\n  const dropOffField = \"Required_Resolution_DateTime\";\n  const dateFields = [\n    { label: \"Submit Date\", value: \"Submit_Date\" },\n    { label: \"Last Modified\", value: \"Last_Modified_Date\" },\n    { label: \"Last Resolved\", value: \"Last_Resolved_Date\" },\n    { label: \"Reported Date\", value: \"Reported_Date\" },\n    { label: \"Responded Date\", value: \"Responded_Date\" },\n    { label: \"Closed Date\", value: \"Closed_Date\" },\n    { label: \"Event Date\", value: \"Event_Date\" },\n    { label: \"Required Resolution\", value: \"Required_Resolution_DateTime\" },\n    { label: \"Estimated Resolution\", value: \"Estimated_Resolution_Date\" },\n    { label: \"Acknowledgement Date\", value: \"Acknowledgment_Start_Date\" },\n    { label: \"Resolution Start Date\", value: \"Resolution_Start_Date\" },\n    { label: \"Last SLA Hold Date\", value: \"Last_SLA_Hold_Date\" },\n    { label: \"VIP Assignment Date\", value: \"VIPAssignmentDateTime\" },\n    { label: \"VIP Dispatch Date\", value: \"VIPDispatchDateTime\" }\n  ];\n\n  const [columns, setColumns] = useState([\n    { name: \"Age_In_Minutes\", title: \"Age_In_Minutes\" },\n    { name: \"Incident_Number\", title: \"Incident_Number\" },\n    {\n      name: \"Incident_Number_wIndicator\",\n      title: \"Incident Number\",\n      getCellValue: (data) => {\n        let _indicator = \"\";\n        try {\n          let _event_date = moment.unix(data.Event_Date).local();\n\n          if (moment().diff(_event_date, \"days\") < 2) {\n            _indicator = (\n              <Square\n                sx={{ color: \"limeGreen\", height: 18, marginTop: \"-.11em\" }}\n              />\n            );\n          }\n        } catch (ex) {}\n\n        return (\n          <div>\n            {data.Incident_Number}\n            {_indicator}\n          </div>\n        );\n      }\n    },\n    { name: \"PriorityCode\", title: \"Priority\" },\n    { name: \"Description\", title: \"Summary\" },\n    { name: \"Event_Date\", title: \"Event Date\" },\n    { name: \"Last_Modified_Date\", title: \"Modified\" },\n    { name: \"Assigned_Company_Group\", title: \"Company/Group\" },\n    { name: \"Assignee\", title: \"Assignee\" },\n    { name: \"StatusCode\", title: \"Status\" },\n    { name: \"LastLog\", title: \"Last Log Entry\" }\n  ]);\n\n  const [defaultColumnWidths, setDefaultColumnWidths] = useState([\n    { columnName: \"Age\", width: 110 },\n    { columnName: \"Age_In_Minutes\", width: 0 },\n    { columnName: \"Incident_Number_wIndicator\", width: 160 },\n    { columnName: \"Incident_Number\", width: 0 },\n    { columnName: \"PriorityCode\", width: 90 },\n    { columnName: \"Description\", width: \"auto\" },\n    { columnName: \"Submit_Date\", width: 150 },\n    { columnName: \"Event_Date\", width: 150 },\n    { columnName: \"Last_Modified_Date\", width: 150 },\n    { columnName: \"Assigned_Company_Group\", width: \"auto\" },\n    { columnName: \"Assignee\", width: \"auto\" },\n    { columnName: \"StatusCode\", width: 90 },\n    { columnName: \"LastLog\", width: \"auto\" }\n  ]);\n\n  const tableColumnExtensions = [\n    { columnName: \"Description\", wordWrapEnabled: true },\n    { columnName: \"LastLog\", wordWrapEnabled: true }\n  ];\n\n  const pageSize = 20;\n  const [currentPage, setCurrentPage] = useState(0);\n  const [totalCount, setTotalCount] = useState(0);\n  const [rows, setRows] = useState([]);\n  const [lastUpdated, setLastUpdated] = useState(null);\n\n  React.useEffect(() => {\n    let _defaultColumnWidths = _.cloneDeep(defaultColumnWidths);\n    _defaultColumnWidths.push({\n      columnName: kpiDateField,\n      width: 150\n    });\n    setDefaultColumnWidths(_defaultColumnWidths);\n  }, [kpiDateField]);\n\n  React.useEffect(() => {\n    if (company) {\n      getGroups();\n    }\n  }, [company]);\n\n  React.useEffect(() => {\n    if (company && group && !show4HrContainmentView) {\n      getIncidents();\n    }\n  }, [serviceIDs, selectedPriorities]);\n\n  React.useEffect(() => {\n    if (!show4HrContainmentView) {\n      getServices();\n    }\n    if (company && group) {\n      getIncidents();\n    }\n  }, [groupID, selectedPriorities]);\n\n  React.useEffect(() => {\n    getView();\n    getCompanies();\n  }, []);\n\n  React.useEffect(() => {\n    if (isAutoRefresh) {\n      setMyInterval(\n        setInterval(() => {\n          getIncidents();\n        }, 120000)\n      );\n    } else {\n      clearInterval(myInterval);\n    }\n    return () => {\n      clearInterval(myInterval);\n    };\n  }, [isAutoRefresh]);\n\n  React.useEffect(() => {\n    if (showAgeKpi) {\n      setAgeKpiArrowColor(\"primary\");\n      setAgeKpiBtnCss(\"active\");\n    } else {\n      // Style dropdown\n      setAgeKpiArrowColor(\"disabled\");\n      setAgeKpiBtnCss(\"disabled\");\n      setAgeKpiOptionsCss(\"disabled\");\n    }\n    addKpiColumn();\n  }, [showAgeKpi]);\n\n  React.useEffect(() => {\n    if (showAgeKpi) {\n      getIncidents();\n    }\n  }, [greenMaxAge, yellowMaxAge, redMaxAge, kpiDateField]);\n\n  React.useEffect(() => {\n    if (show4HrContainmentView) {\n      // set services\n      setServices([{ label: \"CyberSecurity\", value: \"CyberSecurity\" }]);\n      setServiceIDs([{ label: \"CyberSecurity\", value: \"CyberSecurity\" }]);\n\n      // set priorities\n      setSelectedPriorities([\n        { label: \"High\", value: \"1\" },\n        { label: \"Critical\", value: \"0\" }\n      ]);\n      setKpiDateField(\"Event_Date\");\n      setGreenMaxAge(90);\n      setYellowMaxAge(180);\n      setRedMaxAge(240);\n      setShowAgeKpi(true);\n\n      columns\n        .filter((x) => x.name === \"Event_Date\")\n        .forEach((column) => {\n          column.title = \"4-HR Start Date\";\n          column.name = kpiDateField;\n        });\n\n      // set service, company, group\n      setCompany(\"All\");\n      setGroup(\"All\");\n      setOrg(\"All\");\n      setGroupID(\"All\");\n\n      //todo: highlight certain rows blue\n    } else {\n      columns\n        .filter((x) => x.title === \"4-HR Start Date\")\n        .forEach((column) => {\n          column.title = \"Event Date\";\n          column.name = \"Event_Date\";\n        });\n    }\n  }, [show4HrContainmentView]);\n\n  const saveView = () => {\n    try {\n      localStorage.setItem(\n        \"show4HrContainmentView\",\n        JSON.stringify(show4HrContainmentView)\n      );\n      localStorage.setItem(\"showAgeKpi\", JSON.stringify(showAgeKpi));\n      localStorage.setItem(\"greenMaxAge\", greenMaxAge);\n      localStorage.setItem(\"yellowMaxAge\", yellowMaxAge);\n      localStorage.setItem(\"redMaxAge\", redMaxAge);\n      localStorage.setItem(\"company\", company);\n      localStorage.setItem(\"org\", org);\n      localStorage.setItem(\"groupID\", groupID);\n      localStorage.setItem(\"group\", group);\n      localStorage.setItem(\"serviceIDs\", JSON.stringify(serviceIDs));\n      localStorage.setItem(\n        \"selectedPriorities\",\n        JSON.stringify(selectedPriorities)\n      );\n      localStorage.setItem(\"isAutoRefresh\", JSON.stringify(isAutoRefresh));\n\n      addToast(\"View saved successfully\", {\n        appearance: \"success\",\n        autoDismiss: true,\n        autoDismissTimeout: 2500\n      });\n    } catch (ex) {\n      addToast(\"Error saving the view\", {\n        appearance: \"error\",\n        autoDismiss: true,\n        autoDismissTimeout: 2500\n      });\n    }\n  };\n\n  const getView = () => {\n    setCompany(localStorage.getItem(\"company\"));\n    setOrg(localStorage.getItem(\"org\"));\n    setGroupID(localStorage.getItem(\"groupID\"));\n    setGroup(localStorage.getItem(\"group\"));\n    if (localStorage.getItem(\"serviceIDs\") != null) {\n      setServiceIDs(JSON.parse(localStorage.getItem(\"serviceIDs\")));\n    }\n    if (localStorage.getItem(\"selectedPriorities\") != null) {\n      setSelectedPriorities(\n        JSON.parse(localStorage.getItem(\"selectedPriorities\"))\n      );\n    }\n    setShow4HrContainmentView(\n      JSON.parse(localStorage.getItem(\"show4HrContainmentView\")) || false\n    );\n    setShowAgeKpi(JSON.parse(localStorage.getItem(\"showAgeKpi\")) || false);\n    setGreenMaxAge(localStorage.getItem(\"greenMaxAge\") || 90);\n    setYellowMaxAge(localStorage.getItem(\"yellowMaxAge\") || 180);\n    setRedMaxAge(localStorage.getItem(\"redMaxAge\") || 240);\n    setIsAutoRefresh(localStorage.getItem(\"isAutoRefresh\") || false);\n  };\n\n  const noDataCell = (props) => {\n    return loading ? (\n      <td colSpan={props.colSpan} />\n    ) : (\n      <Table.NoDataCell {...props} />\n    );\n  };\n\n  const addKpiColumn = () => {\n    if (showAgeKpi) {\n      setColumns(\n        [{ getCellValue: getKpi, title: \"Age\", name: \"Age\" }].concat(\n          columns.filter((x) => x.name !== \"Age\")\n        )\n      );\n    } else {\n      setColumns(columns.filter((x) => x.name !== \"Age\"));\n    }\n  };\n\n  const getKpi = (data) => {\n    let _color = grey[500];\n    if (data.Age_KPI.indexOf(\"green.gif\") !== -1) _color = green[500];\n    else if (data.Age_KPI.indexOf(\"yellow.gif\") !== -1) _color = yellow[500];\n    else if (data.Age_KPI.indexOf(\"red.gif\") !== -1) _color = red[500];\n\n    let _text = \"\";\n    let _age = 0;\n    try {\n      let _age = parseInt(data.Age_In_Minutes);\n      let _greenMaxAge = parseInt(greenMaxAge);\n      let _yellowMaxAge = parseInt(yellowMaxAge);\n      let _redMaxAge = parseInt(redMaxAge);\n\n      if (_age > _redMaxAge) {\n        _text = \"Exceeded!\";\n      } else if (_age > _yellowMaxAge) {\n        _text = \"-\" + (_redMaxAge - _age);\n      } else if (_age > _greenMaxAge) {\n        _text = \"-\" + (_yellowMaxAge - _age);\n      } else {\n        _text = \"-\" + (_greenMaxAge - _age);\n      }\n    } catch (ex) {}\n\n    return (\n      <div>\n        <Circle sx={{ color: _color }} /> {_text}\n      </div>\n    );\n  };\n\n  const getKpiParams = () => {\n    return `StartDateField%3D${kpiDateField};DropOffField%3D${dropOffField};GreenMaxAge%3D${greenMaxAge};YellowMaxAge%3D${yellowMaxAge};RedMaxAge%3D${redMaxAge}`;\n  };\n\n  const dateFormatter = (epoch) => {\n    return moment\n      .unix(epoch | epoch.value)\n      .local()\n      .format(\"MM/DD/YYYY hh:mm\"); // 01/11/2021\n  };\n\n  const DateTypeProvider = (props) => (\n    <DataTypeProvider formatterComponent={dateFormatter} {...props} />\n  );\n\n  const TableRow = ({ row, ...restProps }) => (\n    <Table.Row\n      {...restProps}\n      style={{\n        backgroundColor:\n          row.Assignee?.toLowerCase().indexOf(\"supervisor\") != -1\n            ? \"rgba(179, 229, 252, .35)\"\n            : \"transparent\"\n      }}\n    />\n  );\n\n  const getCompanies = () => {\n    fetch(`${dataSiteUrl}companies.json?opCode=GetCompanies`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    })\n      .then(function (response) {\n        return response.json();\n      })\n      .then(function (json) {\n        setCompanies([{ label: \"All\", value: \"All\" }].concat(json.data));\n      });\n  };\n\n  const getGroups = () => {\n    fetch(`${dataSiteUrl}groups.json?opCode=GetGroups&Company=${company}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      }\n    })\n      .then(function (response) {\n        return response.json();\n      })\n      .then(function (json) {\n        setGroups([{ label: \"All\", value: \"All|All\" }].concat(json.data));\n      });\n  };\n\n  const getServices = () => {\n    fetch(\n      `${dataSiteUrl}services.json?opCode=GetServices&Company=${company}&Org=${org}&GroupID=${groupID}&Priorities=${priorities?.map(\n        (x) => x.value\n      )}&Filter=&KpiParams=${getKpiParams()}`,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        }\n      }\n    )\n      .then(function (response) {\n        return response.json();\n      })\n      .then(function (myJson) {\n        setServices(myJson.data);\n      });\n  };\n\n  const getIncidents = () => {\n    setRows([]);\n    setLoading(true);\n\n    let _services = serviceIDs?.map((x) => x.value);\n    if (_services == \"\" || _services == null) {\n      _services = \"All\";\n    }\n\n    let _priorities = selectedPriorities?.map((x) => x.value);\n    if (_priorities == \"\" || _priorities == null) {\n      _priorities = \"3,2,1,0\";\n    }\n\n    let _show4HrContainmentView = show4HrContainmentView ? \"1\" : \"0\";\n\n    fetch(\n      `${dataSiteUrl}incidents.json?opCode=GetIncidents&Page=${currentPage}&Company=${company}&Org=${\n        org || \"All\"\n      }&GroupID=${\n        groupID || \"All\"\n      }&Priorities=${_priorities}&Services=${_services}&Show4HrContainmentView=${_show4HrContainmentView}&Filter=&KpiParams=${getKpiParams()}`,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        }\n      }\n    )\n      .then(function (response) {\n        return response.json();\n      })\n      .then(function (myJson) {\n        setTotalCount(myJson.totalCount);\n        setRows(myJson.data);\n        setLastUpdated(moment());\n        setLoading(false);\n      });\n  };\n\n  const onCompanyChange = (val) => {\n    setGroupID(null);\n    setServiceIDs([]);\n    setCompany(val.value);\n  };\n\n  const onGroupChange = (obj) => {\n    setGroup(obj.value);\n    if (obj.value.indexOf(\"|\") !== -1) {\n      setOrg(obj.value.split(\"|\")[0]);\n      setGroupID(obj.value.split(\"|\")[1]);\n    }\n  };\n\n  const onShowAgeKpiClick = () => {\n    if (showAgeKpi) {\n      setAgeKpiOptionsCss(\n        ageKpiOptionsCss === \"enabled\" ? \"disabled\" : \"enabled\"\n      );\n      setAgeKpiBtnCss(ageKpiOptionsCss === \"enabled\" ? \"active\" : \"selected\");\n    }\n\n    if (ageKpiOptionsCss === \"enabled\") {\n      getIncidents();\n    }\n  };\n\n  const RowDetail = ({ row }) => {\n    return <IncidentItem incidentNumber={row.Incident_Number} />;\n  };\n\n  return (\n    <div>\n      <div class=\"filter-container\">\n        <form>\n          <label class=\"label-nowrap\">\n            Company:\n            <Select\n              className=\"companySel\"\n              onChange={onCompanyChange}\n              options={companies}\n              value={companies.filter(function (option) {\n                return option.value === company;\n              })}\n            ></Select>\n          </label>\n          <label>\n            Group:\n            <Select\n              className=\"groupSel\"\n              value={groups.filter(function (option) {\n                return option.value === group;\n              })}\n              onChange={onGroupChange}\n              options={groups}\n              getOptionLabel={(x) => x.label}\n              getOptionValue={(x) => x.value}\n            ></Select>\n          </label>\n          <label>\n            Services:\n            <Select\n              className=\"servicesSel\"\n              value={services.filter(function (service) {\n                return serviceIDs.some((x) => service.value === x.value);\n              })}\n              onChange={(val) => {\n                setServiceIDs((serviceIDs) => {\n                  return val;\n                });\n              }}\n              options={services}\n              isMulti\n            ></Select>\n          </label>\n\n          <label>\n            Priorities:\n            <Select\n              value={priorities.filter(function (priority) {\n                return selectedPriorities.some(\n                  (x) => priority.value === x.value\n                );\n              })}\n              onChange={(val) => {\n                setSelectedPriorities((selectedPriorities) => {\n                  return val;\n                });\n              }}\n              options={priorities}\n              class=\"form-check-input\"\n              isMulti\n            ></Select>\n          </label>\n          <div style={{ paddingTop: 10 }}>\n            <label>\n              <div class=\"form-check form-switch\">\n                <input\n                  class=\"form-check-input\"\n                  type=\"checkbox\"\n                  checked={show4HrContainmentView}\n                  onChange={(e) => {\n                    setShow4HrContainmentView(e.target.checked);\n                  }}\n                />\n                <label class=\"form-check-label\" for=\"flexSwitchCheckDefault\">\n                  Show 4HR-Containment View\n                </label>\n              </div>\n            </label>\n\n            <label>\n              <div class=\"form-check form-switch\">\n                <input\n                  class=\"form-check-input\"\n                  type=\"checkbox\"\n                  checked={showAgeKpi}\n                  onChange={(e) => {\n                    setShowAgeKpi(e.target.checked);\n                  }}\n                />\n                <label\n                  onClick={onShowAgeKpiClick}\n                  class={\"form-check-label age-kpi-btn-\" + ageKpiBtnCss}\n                  for=\"flexSwitchCheckDefault\"\n                >\n                  Show age indicators\n                  <ArrowDropDownIcon color={ageKpiArrowColor} />\n                  <div\n                    onClick={(event) => event.stopPropagation()}\n                    class={\"age-kpi-options-\" + ageKpiOptionsCss}\n                  >\n                    <span class=\"close-icon\" onClick={onShowAgeKpiClick}>\n                      <CloseIcon fontSize=\"small\" />\n                    </span>\n                    <div class=\"label-nowrap\">\n                      Age field:&nbsp;\n                      <label>\n                        <Select\n                          onChange={(val) => setKpiDateField(val.value)}\n                          options={dateFields}\n                          value={dateFields.filter(function (option) {\n                            return option.value === kpiDateField;\n                          })}\n                        ></Select>\n                      </label>\n                      <br />\n                      Green Max Age:&nbsp;\n                      <label>\n                        <input\n                          value={greenMaxAge}\n                          onInput={(e) => setGreenMaxAge(e.target.value)}\n                          type=\"text\"\n                          class=\"form-control\"\n                        />\n                      </label>\n                      <br />\n                      Yellow Max Age:&nbsp;\n                      <label>\n                        <input\n                          value={yellowMaxAge}\n                          onInput={(e) => setYellowMaxAge(e.target.value)}\n                          type=\"text\"\n                          class=\"form-control\"\n                        />\n                      </label>\n                      <br />\n                      Red Max Age:&nbsp;\n                      <label>\n                        <input\n                          value={redMaxAge}\n                          onInput={(e) => setRedMaxAge(e.target.value)}\n                          type=\"text\"\n                          class=\"form-control\"\n                        />\n                      </label>\n                    </div>\n                    <span class=\"footer\">* in minutes</span>\n                  </div>\n                </label>\n              </div>\n            </label>\n            <label style={{ paddingRight: 9 }}>\n              <div class=\"form-check form-switch\">\n                <input\n                  class=\"form-check-input\"\n                  type=\"checkbox\"\n                  checked={isAutoRefresh}\n                  onChange={() => setIsAutoRefresh(!isAutoRefresh)}\n                />\n                <label class=\"form-check-label\" for=\"flexSwitchCheckDefault\">\n                  Auto-refresh\n                </label>\n              </div>\n            </label>\n            <label>\n              <input type=\"button\" value=\"Save view\" onClick={saveView} />\n            </label>\n          </div>\n        </form>\n      </div>\n      <div class=\"grid\">\n        <Grid rows={rows} columns={columns} header={<IncidentItem />}>\n          <PagingState\n            currentPage={currentPage}\n            onCurrentPageChange={setCurrentPage}\n            pageSize={pageSize}\n          />\n          <CustomPaging totalCount={totalCount} />\n          <IntegratedPaging />\n          <SortingState\n            defaultSorting={[{ columnName: \"Name\", direction: \"asc\" }]}\n          />\n          <IntegratedSorting />\n          <RowDetailState />\n          <SearchState defaultValue=\"\" />\n          <IntegratedFiltering />\n          <DateTypeProvider for={dateFields?.map((x) => x.value)} />\n          <Table\n            noDataCellComponent={noDataCell}\n            columnExtensions={tableColumnExtensions}\n            rowComponent={TableRow}\n          />\n          <TableColumnVisibility\n            defaultHiddenColumnNames={[\"Age_In_Minutes\"]}\n          />\n          <TableColumnResizing\n            resizingMode=\"nextColumn\"\n            defaultColumnWidths={defaultColumnWidths}\n          />\n          <TableHeaderRow showSortingControls />\n          <PagingPanel />\n          <TableRowDetail contentComponent={RowDetail} />\n        </Grid>\n        <label className=\"rem-footer\">\n          Last updated: {moment(lastUpdated).format(\"MM/DD/YYYY HH:mm\")}\n        </label>\n        {loading && <Loading />}\n      </div>\n    </div>\n  );\n}\n","import * as React from \"react\";\r\nimport { FunctionComponent, useEffect, useState } from \"react\";\r\nimport { Loading } from \"./loading\";\r\nimport moment from \"moment\";\r\n\r\ninterface NCRItemProps {\r\n  infrastructureChangeID: string;\r\n}\r\n\r\nexport interface WorkLogDto {\r\n  Work_Log_Submit_Date?: string | null;\r\n  Work_Log_Submitter?: string | null;\r\n  Detailed_Description?: string | null;\r\n}\r\n\r\nexport interface NCRItemDto {\r\n  Site_Group?: string | null;\r\n  bmc_Security_Classification?: string | null;\r\n  Change_Request_Status?: string | null;\r\n  Description?: string | null;\r\n  Detailed_Description?: string | null;\r\n  ChangeCoordinatorGroup?: string | null;\r\n  Submitter?: string | null;\r\n  Approved?: string | null;\r\n  Created?: string | null;\r\n  Modified?: string | null;\r\n  WorkLog?: WorkLogDto[] | null;\r\n}\r\n\r\nconst NCRItem: FunctionComponent<NCRItemProps> = (props) => {\r\n  const dataSiteUrl = \"data/\";\r\n  const [loading, setLoading] = useState(false);\r\n  const [row, setRow] = useState<NCRItemDto>({});\r\n\r\n  const dateFormatter = (epoch: number) => {\r\n    return moment.unix(epoch).local().format(\"MM/DD/YYYY\"); // 01/11/2021\r\n  };\r\n\r\n  const getNCRItem = () => {\r\n    console.log(\"getNCRItem\");\r\n    setRow({});\r\n    setLoading(true);\r\n\r\n    fetch(\r\n      `${dataSiteUrl}NCRItem.json?opCode=GetNCRItem&InfrastructureChangeID=${props.infrastructureChangeID}`,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\"\r\n        }\r\n      }\r\n    )\r\n      .then(function (response) {\r\n        return response.json();\r\n      })\r\n      .then(function (myJson) {\r\n        setRow(myJson.data);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getNCRItem();\r\n  }, [props.infrastructureChangeID]);\r\n\r\n  return (\r\n    <div className=\"row\" style={{ maxWidth: \"calc(100vw)\" }}>\r\n      <div\r\n        className=\"col-6\"\r\n        style={{\r\n          maxHeight: 300,\r\n          overflowY: \"auto\",\r\n          marginBottom: -15,\r\n          marginTop: -15,\r\n          paddingTop: 11,\r\n          paddingBottom: 11\r\n        }}\r\n      >\r\n        <div className=\"detail-field\">\r\n          <strong>Change Location:</strong>\r\n          <br />\r\n          {row.Site_Group}\r\n        </div>\r\n        <div className=\"detail-field\">\r\n          <strong>Security Classification:</strong>\r\n          <br />\r\n          {row.bmc_Security_Classification}\r\n        </div>\r\n        <div className=\"detail-field\">\r\n          <strong>Status:</strong>\r\n          <br />\r\n          {row.Change_Request_Status}\r\n        </div>\r\n        <div className=\"detail-field\">\r\n          <strong>Summary:</strong>\r\n          <br />\r\n          {row.Description}\r\n        </div>\r\n        <div className=\"detail-field\">\r\n          <strong>Notes:</strong>\r\n          <br />\r\n          {row.Detailed_Description}\r\n        </div>\r\n        <div className=\"detail-field\">\r\n          <strong>Change Coordinator / Change Group:</strong>\r\n          <br />\r\n          {row.ChangeCoordinatorGroup}\r\n        </div>\r\n        <div className=\"detail-field\">\r\n          <strong>Submitter / Office:</strong>\r\n          <br />\r\n          {row.Submitter}\r\n        </div>\r\n        <div className=\"detail-field\">\r\n          <strong>Approved:</strong>\r\n          <br />\r\n          {row.Approved}\r\n        </div>\r\n        <div className=\"detail-field\">\r\n          <strong>Created:</strong>\r\n          <br />\r\n          {row.Created}\r\n        </div>\r\n        <div className=\"detail-field\">\r\n          <strong>Modified:</strong>\r\n          <br />\r\n          {row.Modified}\r\n        </div>\r\n      </div>\r\n      {row.WorkLog && (\r\n        <div\r\n          className=\"col-6\"\r\n          style={{\r\n            maxHeight: 300,\r\n            overflowY: \"auto\",\r\n            borderLeft: \"1px solid #ced4da\",\r\n            marginBottom: -15,\r\n            marginTop: -15,\r\n            paddingTop: 11,\r\n            paddingBottom: 11\r\n          }}\r\n        >\r\n          <div style={{ padding: 3 }}>\r\n            <b>LOG:</b>\r\n          </div>\r\n          <div>\r\n            {row.WorkLog?.map(function (item, i) {\r\n              return (\r\n                <div\r\n                  className=\"detail-field\"\r\n                  style={{\r\n                    borderBottom: \"1px solid #ced4da\"\r\n                  }}\r\n                >\r\n                  <div className=\"worklog-header\">\r\n                    <strong>\r\n                      {dateFormatter(\r\n                        parseInt(item.Work_Log_Submit_Date || \"0\")\r\n                      )}\r\n                    </strong>{\" \"}\r\n                    {item.Work_Log_Submitter}\r\n                  </div>\r\n                  <div className=\"worklog-body\">\r\n                    {item.Detailed_Description}\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n      {loading && <Loading />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NCRItem;\r\n","import React, { useState } from \"react\";\r\nimport Select from \"react-select\";\r\nimport NCRItem from \"./NCRItem.tsx\";\r\n\r\nimport {\r\n  SortingState,\r\n  IntegratedSorting,\r\n  SearchState,\r\n  RowDetailState,\r\n  IntegratedFiltering,\r\n  DataTypeProvider,\r\n  PagingState,\r\n  CustomPaging,\r\n  IntegratedPaging\r\n} from \"@devexpress/dx-react-grid\";\r\nimport {\r\n  Grid,\r\n  Table,\r\n  Toolbar,\r\n  SearchPanel,\r\n  TableHeaderRow,\r\n  TableRowDetail,\r\n  TableColumnVisibility,\r\n  TableColumnResizing,\r\n  PagingPanel\r\n} from \"@devexpress/dx-react-grid-material-ui\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport moment from \"moment\";\r\nimport { Loading } from \"./loading\";\r\n\r\nexport default function NCRProjectTracker(props) {\r\n  const dataSiteUrl = \"data/\";\r\n  const remedyItemUrl = \"[RemedyItemUrl]\";\r\n  const companies = [\r\n    { label: \"All\", value: \"All\" },\r\n    { label: \"NCR\", value: \"NCR\" },\r\n    { label: \"Crystal City\", value: \"Crystal City\" }\r\n  ];\r\n  const [company, setCompany] = useState(\"All\");\r\n  const [sites, setSites] = useState([]);\r\n  const [site, setSite] = useState(\"All\");\r\n\r\n  const [columns, setColumns] = useState([\r\n    { name: \"Site\", title: \"Location\" },\r\n    { name: \"Infrastructure_Change_ID\", title: \"Change ID\" },\r\n    { name: \"Description\", title: \"Summary\" },\r\n    { name: \"Approved\", title: \"Approved\" },\r\n    { name: \"ASCHG\", title: \"Assignee\" },\r\n    { name: \"Change_Request_Status\", title: \"Remedy Status\" },\r\n    { name: \"Current_Update\", title: \"Current Update\" },\r\n    { name: \"Submit_Date\", title: \"Submitted\" },\r\n    { name: \"Last_Modified_By\", title: \"Modified By\" },\r\n    { name: \"Last_Modified_Date\", title: \"Modified On\" }\r\n  ]);\r\n  const [defaultColumnWidths, setDefaultColumnWidths] = useState([\r\n    { columnName: \"Site\", width: 150 },\r\n    { columnName: \"Infrastructure_Change_ID\", width: 150 },\r\n    { columnName: \"Description\", width: 450 },\r\n    { columnName: \"Approved\", width: 120 },\r\n    { columnName: \"ASCHG\", width: 230 },\r\n    { columnName: \"Change_Request_Status\", width: 230 },\r\n    { columnName: \"Current_Update\", width: 420 },\r\n    { columnName: \"Submit_Date\", width: 150 },\r\n    { columnName: \"Last_Modified_By\", width: 200 },\r\n    { columnName: \"Last_Modified_Date\", width: 150 }\r\n  ]);\r\n  const tableColumnExtensions = [\r\n    { columnName: \"Description\", wordWrapEnabled: true },\r\n    { columnName: \"Current_Update\", wordWrapEnabled: true }\r\n  ];\r\n  const dateFields = [\r\n    { label: \"Submit Date\", value: \"Submit_Date\" },\r\n    { label: \"Last Modified Date\", value: \"Last_Modified_Date\" }\r\n  ];\r\n  const [loading, setLoading] = useState(false);\r\n  const pageSize = 20;\r\n  const [currentPage, setCurrentPage] = useState(0);\r\n  const [totalCount, setTotalCount] = useState(0);\r\n  const [rows, setRows] = useState([]);\r\n\r\n  const noDataCell = (props) => {\r\n    return loading ? (\r\n      <td colSpan={props.colSpan} />\r\n    ) : (\r\n      <Table.NoDataCell {...props} />\r\n    );\r\n  };\r\n\r\n  const getLink = (data) => {\r\n    let _filter = data.Infrastructure_Change_ID.substring(\r\n      data.Infrastructure_Change_ID.lastIndexOf(\"0\") + 1,\r\n      data.Infrastructure_Change_ID.length\r\n    );\r\n    let _link =\r\n      remedyItemUrl +\r\n      \"/?mode=search&amp;F304255500=CHG%3AInfrastructure%20Change&amp;F1000000076=FormOpenNoAppList&amp;F303647600=SearchTicketWithQual&amp;F304255610='Infrastructure%20Change%20ID'LIKE%22%25\" +\r\n      _filter +\r\n      \"%22\";\r\n    return (\r\n      <a href={_link} target=\"_blank\">\r\n        {data.Infrastructure_Change_ID}\r\n      </a>\r\n    );\r\n  };\r\n\r\n  const dateFormatter = (epoch) => {\r\n    return moment\r\n      .unix(epoch | epoch.value)\r\n      .local()\r\n      .format(\"MM/DD/YYYY hh:mm\"); // 01/11/2021\r\n  };\r\n\r\n  const DateTypeProvider = (props) => (\r\n    <DataTypeProvider formatterComponent={dateFormatter} {...props} />\r\n  );\r\n\r\n  const getSites = () => {\r\n    fetch(`${dataSiteUrl}sites.json?opCode=GetNCRSites&Company=${company}`, {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\"\r\n      }\r\n    })\r\n      .then(function (response) {\r\n        return response.json();\r\n      })\r\n      .then(function (json) {\r\n        setSites([{ label: \"All\", value: \"All\" }].concat(json.data));\r\n      });\r\n  };\r\n\r\n  const getRows = () => {\r\n    setRows([]);\r\n    setLoading(true);\r\n\r\n    fetch(\r\n      `${dataSiteUrl}NCRItems.json?opCode=GetNCRItems&Page=${currentPage}&Company=${company}&Site=${site}`,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\"\r\n        }\r\n      }\r\n    )\r\n      .then(function (response) {\r\n        return response.json();\r\n      })\r\n      .then(function (json) {\r\n        setRows(json.data);\r\n        let _columns = columns;\r\n        _columns[1].getCellValue = getLink;\r\n        setColumns(_columns);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const onCompanyChange = (val) => {\r\n    setSite(\"All\");\r\n    getSites();\r\n    setCompany(val.value);\r\n  };\r\n\r\n  const onSiteChange = (val) => {\r\n    setSite(val.value);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    getSites();\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    getRows();\r\n  }, [company, site]);\r\n\r\n  const RowDetail = ({ row }) => {\r\n    return <NCRItem infrastructureChangeID={row.Infrastructure_Change_ID} />;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div class=\"filter-container\">\r\n        <form>\r\n          <label class=\"label-nowrap\">\r\n            Company:\r\n            <Select\r\n              className=\"companySel\"\r\n              onChange={onCompanyChange}\r\n              options={companies}\r\n              value={companies.filter(function (option) {\r\n                return option.value === company;\r\n              })}\r\n            ></Select>\r\n          </label>\r\n          <label>\r\n            Site:\r\n            <Select\r\n              className=\"sitesel\"\r\n              value={sites.filter(function (option) {\r\n                return option.value === site;\r\n              })}\r\n              onChange={onSiteChange}\r\n              options={sites}\r\n              getOptionLabel={(x) => x.label}\r\n              getOptionValue={(x) => x.value}\r\n            ></Select>\r\n          </label>\r\n        </form>\r\n      </div>\r\n      <div class=\"grid\">\r\n        <Grid rows={rows} columns={columns}>\r\n          <PagingState\r\n            currentPage={currentPage}\r\n            onCurrentPageChange={setCurrentPage}\r\n            pageSize={pageSize}\r\n          />\r\n          <CustomPaging totalCount={totalCount} />\r\n          <IntegratedPaging />\r\n          <SortingState\r\n            defaultSorting={[{ columnName: \"Name\", direction: \"asc\" }]}\r\n          />\r\n          <IntegratedSorting />\r\n          <RowDetailState />\r\n          <SearchState defaultValue=\"\" />\r\n          <IntegratedFiltering />\r\n          <DateTypeProvider for={dateFields.map((x) => x.value)} />\r\n          <Table\r\n            noDataCellComponent={noDataCell}\r\n            columnExtensions={tableColumnExtensions}\r\n          />\r\n          <TableColumnVisibility defaultHiddenColumnNames={[]} />\r\n          <TableColumnResizing defaultColumnWidths={defaultColumnWidths} />\r\n          <TableHeaderRow showSortingControls />\r\n          <PagingPanel />\r\n          <TableRowDetail contentComponent={RowDetail} />\r\n        </Grid>\r\n        {loading && <Loading />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport MyNavbar from \"./MyNavbar.js\";\nimport IncidentManager from \"./IncidentManager.js\";\nimport NCRProjectTracker from \"./NCRProjectTracker.js\";\n\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./styles.css\";\nimport { ToastProvider } from \"react-toast-notifications\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <div>\n    <Router basename=\"/\">\n      <MyNavbar />\n      <ToastProvider>\n        <Routes>\n          <Route path=\"/\" element={<IncidentManager />} />\n          <Route path=\"/IncidentManager\" element={<IncidentManager />} />\n          <Route path=\"/NCRProjectTracker\" element={<NCRProjectTracker />} />\n        </Routes>\n      </ToastProvider>\n    </Router>\n  </div>\n);\n"],"sourceRoot":""}